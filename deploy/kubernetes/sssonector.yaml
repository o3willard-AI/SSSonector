---
# ConfigMap for SSSonector configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: sssonector-config
  labels:
    app: sssonector
data:
  config.json: |
    {
      "mode": "server",
      "network": {
        "interface": "tun0",
        "mtu": 1500
      },
      "tunnel": {
        "protocol": "tcp",
        "encryption": "aes-256-gcm",
        "compression": "none"
      },
      "monitor": {
        "enabled": true,
        "interval": 60,
        "log_level": "info",
        "metrics_enabled": true
      }
    }

---
# Secret for TLS certificates
apiVersion: v1
kind: Secret
metadata:
  name: sssonector-certs
  labels:
    app: sssonector
type: Opaque
data:
  server.crt: ${BASE64_SERVER_CERT}
  server.key: ${BASE64_SERVER_KEY}
  ca.crt: ${BASE64_CA_CERT}

---
# Service for SSSonector API
apiVersion: v1
kind: Service
metadata:
  name: sssonector
  labels:
    app: sssonector
spec:
  type: LoadBalancer
  ports:
    - name: http-api
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: https-api
      port: 8443
      targetPort: 8443
      protocol: TCP
  selector:
    app: sssonector

---
# DaemonSet for SSSonector
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sssonector
  labels:
    app: sssonector
spec:
  selector:
    matchLabels:
      app: sssonector
  template:
    metadata:
      labels:
        app: sssonector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
        - name: sssonector
          image: sssonector:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
                - SYS_ADMIN
          ports:
            - name: http-api
              containerPort: 8080
              protocol: TCP
            - name: https-api
              containerPort: 8443
              protocol: TCP
          env:
            - name: SSSONECTOR_CONFIG
              value: /etc/sssonector/config.json
            - name: SSSONECTOR_LOG_LEVEL
              value: info
            - name: SSSONECTOR_LOG_FORMAT
              value: json
            - name: SSSONECTOR_METRICS_ENABLED
              value: "true"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: config
              mountPath: /etc/sssonector/config.json
              subPath: config.json
              readOnly: true
            - name: certs
              mountPath: /etc/sssonector/certs
              readOnly: true
            - name: data
              mountPath: /var/lib/sssonector
            - name: host-dev
              mountPath: /dev
            - name: host-sys
              mountPath: /sys
            - name: host-proc
              mountPath: /host/proc
              readOnly: true
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: config
          configMap:
            name: sssonector-config
        - name: certs
          secret:
            secretName: sssonector-certs
        - name: data
          hostPath:
            path: /var/lib/sssonector
            type: DirectoryOrCreate
        - name: host-dev
          hostPath:
            path: /dev
        - name: host-sys
          hostPath:
            path: /sys
        - name: host-proc
          hostPath:
            path: /proc

---
# NetworkPolicy for SSSonector
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sssonector
  labels:
    app: sssonector
spec:
  podSelector:
    matchLabels:
      app: sssonector
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - ports:
        - port: 8080
          protocol: TCP
        - port: 8443
          protocol: TCP
  egress:
    - {}

---
# RBAC configuration
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sssonector
  labels:
    app: sssonector

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sssonector
  labels:
    app: sssonector
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sssonector
  labels:
    app: sssonector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sssonector
subjects:
  - kind: ServiceAccount
    name: sssonector
    namespace: default
