#!/usr/bin/expect

source [file dirname $argv0]/../test_utils.exp

# Set test environment
set monitor_host "192.168.50.212"
set server_host "192.168.50.210"
set client_host "192.168.50.211"

# Log file setup
log_file -a "test/test_logs/snmp_basic_test.log"
send_log "\n=== Starting SNMP Basic Tests ===\n"
send_log "[exec date]\n"

proc test_snmp_connectivity {host} {
    send_log "\nTesting SNMP connectivity to $host...\n"
    
    spawn snmpwalk -v2c -c public $host system
    expect {
        "system.sysDescr.0" {
            send_log "✓ SNMP connectivity successful to $host\n"
            return 1
        }
        timeout {
            send_log "✗ SNMP connectivity timeout to $host\n"
            return 0
        }
        eof {
            send_log "✗ SNMP connectivity failed to $host\n"
            return 0
        }
    }
}

proc verify_metric {host metric_oid expected_pattern} {
    send_log "\nVerifying metric $metric_oid on $host...\n"
    
    spawn snmpget -v2c -c public -Oqv $host $metric_oid
    expect {
        -re $expected_pattern {
            send_log "✓ Metric validation successful\n"
            return 1
        }
        timeout {
            send_log "✗ Metric validation timeout\n"
            return 0
        }
        eof {
            send_log "✗ Metric validation failed\n"
            return 0
        }
    }
}

# Test 1: Basic Connectivity
set test_results(connectivity) 1
foreach host [list $monitor_host] {
    if {![test_snmp_connectivity $host]} {
        set test_results(connectivity) 0
    }
}

# Test 2: Throughput Metrics
set throughput_oid "NET-SNMP-EXTEND-MIB::nsExtendOutput1Line.\"sssonector-throughput\""
set test_results(throughput) [verify_metric $monitor_host $throughput_oid {[0-9]+:[0-9]+}]

# Test 3: Connection Metrics
set connections_oid "NET-SNMP-EXTEND-MIB::nsExtendOutput1Line.\"sssonector-connections\""
set test_results(connections) [verify_metric $monitor_host $connections_oid {[0-9]+}]

# Test 4: Latency Metrics
set latency_oid "NET-SNMP-EXTEND-MIB::nsExtendOutput1Line.\"sssonector-latency\""
set test_results(latency) [verify_metric $monitor_host $latency_oid {[0-9.]+}]

# Generate Test Summary
send_log "\n=== Test Results Summary ===\n"
foreach {test result} [array get test_results] {
    if {$result} {
        send_log "✓ $test: PASS\n"
    } else {
        send_log "✗ $test: FAIL\n"
    }
}

# Calculate overall test result
set total_tests [array size test_results]
set passed_tests 0
foreach {test result} [array get test_results] {
    if {$result} {
        incr passed_tests
    }
}

send_log "\nPassed $passed_tests out of $total_tests tests\n"
send_log "Test completion time: [exec date]\n"

# Exit with appropriate status
if {$passed_tests == $total_tests} {
    exit 0
} else {
    exit 1
}
